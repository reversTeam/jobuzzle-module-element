/**************************************************************
*     ####         #                               #          * Jobuzzle - Copyright All rights reserved
*     ####         #                               #          *
*       ##  #####  ######  #     # ####### ####### #  #####   * @Author: revers
*       ## #     # #     # #     #      #       #  # #     #  *
*       ## #     # #     # #     #     #       #   # #     #  * @Date:   2015-08-08 11:12:48
*       ## #     # #     # #     #    #       #    # #     #  *
*       ## #     # #     # #     #   #       #     # ######   * @Last Modified by:   revers
*  ####### #     # #     # #     #  #       #      # #        *
*  ######   #####   ######  #####  ####### ####### # #######  * @Last Modified time: 2015-09-15 19:59:44
**************************************************************/

class ElementDataMainEntity extends MasterEntity {

	public _type = 'Element';

	public _templateTimeline = 'element_data_timeline_template';
	public _templateMiniature = 'element_data_miniature_template';

	initialize : function () {
		_super();

		this['_parentid'] = undefined;
		this['_creationdate'] = undefined;
		this['_updatedate'] = undefined;
		this.templates = {};
		this.views = {};
	}

	isMe : function () {
		return false;
	}

	hydrate : function (datas) {
		_super(datas);
		if (datas['parentid'])
			this.setParentid(datas['parentid']);
		if (datas['creationdate'])
			this.setCreationdate(datas['creationdate']);
		if (datas['updatedate'])
			this.setUpdatedate(datas['updatedate']);
	}

	getParent : function () {
		var store = serviceLocator.get('ServiceManager').get('store_manager_main_service');

		return store.get(this.getParentid());
	}

	getTemplate : function (templateName) {
		var templateManager = serviceLocator.get('TemplateManager');

		if (this.templates[templateName] == undefined) {
			this.templates[templateName] = templateManager.get(templateName);
			this.templates[templateName].setEntity(this);
			this.templates[templateName].visible();
			this.views[templateName] = React.createElement(this.templates[templateName].getView(), null);
		}
		return this.views[templateName];
	}

	search : function (params) {
		return (params == '' || this.getId() == params);
	}

	displayTimeline : function (params) {
		return this.getTemplate(this['_templateTimeline']);
	}

	displayMiniature : function () {
		return this.getTemplate(this['_templateMiniature']);
	}

	public getParentid : function () {
		return this['_parentid'];
	}

	public setParentid : function (parentId) {
		this['_parentid'] = parentId;

		return this;
	}

	public getCreationdate : function () {
		return this['_creationdate'];
	}

	public setCreationdate : function (creationdate) {
		this['_creationdate'] = creationdate;

		return this;
	}

	public getUpdatedate : function () {
		return this['_updatedate'];
	}

	public setUpdatedate : function (updatedate) {
		this['_updatedate'] = updatedate;

		return this;
	}
}