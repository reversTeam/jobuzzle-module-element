#import (Config.path +'/Kernel/Entity/MasterEntity') = MasterEntity;

class ElementDataMainEntity extends MasterEntity {

	_type = 'Element';

	_templateTimeline = 'element_data_timeline_template';
	_templateMiniature = 'element_data_miniature_template';

	#default get, set for _parentid;
	#default get, set for _creationdate;
	#default get, set for _updatedate;

	initialize : function () {
		_super();

		this._parentid = undefined;
		this._creationdate = undefined;
		this._updatedate = undefined;
	}

	isMe : function () {
		return false;
	}

	hydrate : function (datas) {
		_super(datas);

		if (datas.parentid) {
			this.setParentid(datas.parentid);
		}
		if (datas.creationdate)
			this.setCreationdate(datas.creationdate);
		if (datas.updatedate)
			this.setUpdatedate(datas.updatedate);
	}

	getParent : function () {
		var store = serviceLocator.get('ServiceManager').get('store_manager_main_service');

		return store.get(this.getParentid());
	}

	getTemplate : function (templateName) {
		var templateManager = serviceLocator.get('TemplateManager');

		if (this.templates[templateName] == undefined) {
			this.templates[templateName] = templateManager.get(templateName);
			this.templates[templateName].setEntity(this);
			this.templates[templateName].visible();
			this.view[templateName] = React['createElement'](this.templates[templateName].getView(), null);
		}
		return this.view[templateName];
	}

	search : function (params) {
		return (params == '' || this.getId() == params);
	}

	displayTimeline : function (params) {
		return this.getTemplate(this._templateTimeline);
	}

	displayMiniature : function () {
		return this.getTemplate(this._templateMiniature);
	}

}

#export ElementDataMainEntity;