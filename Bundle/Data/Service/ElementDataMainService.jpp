/**************************************************************
*     ####         #                               #          * Jobuzzle - Copyright All rights reserved
*     ####         #                               #          *
*       ##  #####  ######  #     # ####### ####### #  #####   * @Author: revers
*       ## #     # #     # #     #      #       #  # #     #  *
*       ## #     # #     # #     #     #       #   # #     #  * @Date:   2015-08-08 11:12:48
*       ## #     # #     # #     #    #       #    # #     #  *
*       ## #     # #     # #     #   #       #     # ######   * @Last Modified by:   revers
*  ####### #     # #     # #     #  #       #      # #        *
*  ######   #####   ######  #####  ####### ####### # #######  * @Last Modified time: 2015-09-29 10:20:11
**************************************************************/

class ElementDataMainService extends MasterService {

	_titleService = undefined;
	_fieldset = undefined;
	_type = 'element';
	_entityType = 'Element';
	_title = 'Elements';
	_fieldsetName = 'element_data_fieldset_form';

	#default get for _titleService;
	#default get for _title;
	#default get for _type;
	#default get, set for _fieldset;

	initialize : function () {
		_super();
		var serviceManager = serviceLocator.get('ServiceManager');

		this._titleService = serviceManager.get('navigation_title_change_service');
		this.setFieldset(serviceLocator.get('FormManager').get(this._fieldsetName));
	}

	public changeTitle : function (str, params) {
		var translator = serviceLocator.get('Translator');
		var title = translator.translate(this.getType() +'.'+ this.getTitle());
		if (str)
		 title += ' - '+ translator.translate(str, params);
		this._titleService.changeTitle(title);
	}

	public search : function () {
		var dispatcher = serviceLocator.get('Dispatcher');

		this.changeTitle('global.search');
		dispatcher.trigger('Body:Content:change', {'content' : this.getType() +'_data_search_template'});
	}

	public create : function () {
		var dispatcher = serviceLocator.get('Dispatcher');

		this.changeTitle('global.create');
		dispatcher.trigger('Body:Content:change', {'content' : this.getType() +'_data_create_template'});
	}

	getTitleParamsView : function (entity) {
		if (entity)
			return { id : entity.getId()};
		return { id : '' };
	}

	public changeTitleView : function (entity) {
		this.changeTitle(this.getType() +'.view', this.getTitleParamsView(entity));
	}

	public changeTitleUpdate : function (entity) {
		this.changeTitle(this.getType() +'.update', this.getTitleParamsView(entity));
	} 

	public view : function (entity) {
		var dispatcher = serviceLocator.get('Dispatcher');
		
		this.changeTitleView(entity);
		dispatcher.trigger('Body:Content:change', {'content' : this.getType() +'_data_view_template'});

		dispatcher.trigger(this.getEntityType() +':load:entity', { 'entity' : entity });
	}

	public update : function (entity) {
		var dispatcher = serviceLocator.get('Dispatcher');

		this.changeTitleUpdate(entity);
		dispatcher.trigger('Body:Content:change', {'content' : this.getType() +'_data_update_template'});

		dispatcher.trigger(this.getEntityType() +':load:entity', { 'entity' : entity });
	}

	public remove : function () {
		var dispatcher = serviceLocator.get('Dispatcher');

		this.changeTitle('global.delete');
		dispatcher.trigger('Body:Content:change', {'content' : this.getType() +'_data_delete_template'});
	}

}